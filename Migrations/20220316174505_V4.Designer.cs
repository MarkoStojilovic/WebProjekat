// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Projekat.Migrations
{
    [DbContext(typeof(BioskopContext))]
    [Migration("20220316174505_V4")]
    partial class V4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Bioskop", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Naziv");

                    b.HasKey("ID");

                    b.ToTable("Bioskop");
                });

            modelBuilder.Entity("Models.Film", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("GlavneUloge")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("GlavneUloge");

                    b.Property<int>("Godina")
                        .HasColumnType("int")
                        .HasColumnName("Godina");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Naziv");

                    b.Property<string>("Reziser")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Reziser");

                    b.Property<string>("Trajanje")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("DuzinaTrajanja");

                    b.Property<string>("Zanr")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Zanr");

                    b.HasKey("ID");

                    b.ToTable("Film");
                });

            modelBuilder.Entity("Models.Gledalac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ime");

                    b.Property<string>("Prezime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Prezime");

                    b.HasKey("ID");

                    b.ToTable("Gledalac");
                });

            modelBuilder.Entity("Models.Projekcija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumProjekcije");

                    b.Property<int?>("FilmID")
                        .HasColumnType("int");

                    b.Property<int?>("SalaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FilmID");

                    b.HasIndex("SalaID");

                    b.ToTable("Projekcija");
                });

            modelBuilder.Entity("Models.Rezervacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Cena")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cena");

                    b.Property<int?>("GledalacID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjekcijaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GledalacID");

                    b.HasIndex("ProjekcijaID");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int?>("BioskopID")
                        .HasColumnType("int");

                    b.Property<int>("BrojRedova")
                        .HasColumnType("int")
                        .HasColumnName("Redova");

                    b.Property<int>("BrojSedista")
                        .HasColumnType("int")
                        .HasColumnName("Sedista");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Naziv");

                    b.HasKey("ID");

                    b.HasIndex("BioskopID");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("Models.Sedista", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("BrojReda")
                        .HasColumnType("int")
                        .HasColumnName("Red");

                    b.Property<int>("BrojSedista")
                        .HasColumnType("int")
                        .HasColumnName("Sediste");

                    b.Property<int?>("RezervacijaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RezervacijaID");

                    b.ToTable("Sedista");
                });

            modelBuilder.Entity("Models.Projekcija", b =>
                {
                    b.HasOne("Models.Film", "Film")
                        .WithMany("Projekcije")
                        .HasForeignKey("FilmID");

                    b.HasOne("Models.Sala", "Sala")
                        .WithMany("Projekcije")
                        .HasForeignKey("SalaID");

                    b.Navigation("Film");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Models.Rezervacija", b =>
                {
                    b.HasOne("Models.Gledalac", "Gledalac")
                        .WithMany("Rezervacije")
                        .HasForeignKey("GledalacID");

                    b.HasOne("Models.Projekcija", "Projekcija")
                        .WithMany("Rezervacije")
                        .HasForeignKey("ProjekcijaID");

                    b.Navigation("Gledalac");

                    b.Navigation("Projekcija");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.HasOne("Models.Bioskop", "Bioskop")
                        .WithMany("Sale")
                        .HasForeignKey("BioskopID");

                    b.Navigation("Bioskop");
                });

            modelBuilder.Entity("Models.Sedista", b =>
                {
                    b.HasOne("Models.Rezervacija", "Rezervacija")
                        .WithMany("RezervacijaSedista")
                        .HasForeignKey("RezervacijaID");

                    b.Navigation("Rezervacija");
                });

            modelBuilder.Entity("Models.Bioskop", b =>
                {
                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Models.Film", b =>
                {
                    b.Navigation("Projekcije");
                });

            modelBuilder.Entity("Models.Gledalac", b =>
                {
                    b.Navigation("Rezervacije");
                });

            modelBuilder.Entity("Models.Projekcija", b =>
                {
                    b.Navigation("Rezervacije");
                });

            modelBuilder.Entity("Models.Rezervacija", b =>
                {
                    b.Navigation("RezervacijaSedista");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.Navigation("Projekcije");
                });
#pragma warning restore 612, 618
        }
    }
}
